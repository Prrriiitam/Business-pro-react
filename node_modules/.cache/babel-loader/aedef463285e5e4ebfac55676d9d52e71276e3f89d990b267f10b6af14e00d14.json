{"ast":null,"code":"var _jsxFileName = \"D:\\\\lerreact\\\\ractapp\\\\src\\\\App.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SlotM = () => {\n  let x = 'ðŸ˜‡';\n  let y = 'ðŸ˜‡';\n  let z = 'ðŸ“¡ ';\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is Matched\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is not Matched\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 8\n      }, this)\n    }, void 0, false);\n  }\n};\n_c = SlotM;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading_style\",\n      children: [\" \\uD83C\\uDFB0 Welcome to \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        children: \"Slot Machine Game \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 48\n      }, this), \"\\uD83C\\uDFB0 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(SlotM, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"SlotM\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","SlotM","x","y","z","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","style","fontWeight","_c2","$RefreshReg$"],"sources":["D:/lerreact/ractapp/src/App.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst SlotM=()=>{\r\n  let x='ðŸ˜‡';\r\n  let y='ðŸ˜‡';\r\n  let z='ðŸ“¡ ';\r\n\r\n   if(x===y && y===z){\r\n    return(\r\n       <>\r\n        <div className=\"slot_inner\">\r\n            <h1>\r\n              {x} {y} {z}\r\n            </h1>\r\n            <h1>This is Matched</h1>\r\n            <hr></hr>\r\n        </div>\r\n       </>\r\n    );\r\n   }\r\n   else{\r\n    return(\r\n      <>\r\n       <div className=\"slot_inner\">\r\n           <h1>\r\n             {x} {y} {z}\r\n           </h1>\r\n           <h1>This is not Matched</h1>\r\n           <hr></hr>\r\n       </div>\r\n      </>\r\n   );\r\n   }\r\n\r\n}\r\n\r\nconst App=()=>{\r\n  return(\r\n<>\r\n  <h1 className=\"heading_style\"> ðŸŽ° Welcome to <span style={{fontWeight : \"bold\"}}>Slot Machine Game </span>ðŸŽ° </h1>\r\n  <SlotM />\r\n</>\r\n  );\r\n  }\r\n  export default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1B,MAAMC,KAAK,GAACA,CAAA,KAAI;EACd,IAAIC,CAAC,GAAC,IAAI;EACV,IAAIC,CAAC,GAAC,IAAI;EACV,IAAIC,CAAC,GAAC,KAAK;EAEV,IAAGF,CAAC,KAAGC,CAAC,IAAIA,CAAC,KAAGC,CAAC,EAAC;IACjB,oBACGN,OAAA,CAAAE,SAAA;MAAAK,QAAA,eACCP,OAAA;QAAKQ,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvBP,OAAA;UAAAO,QAAA,GACGH,CAAC,EAAC,GAAC,EAACC,CAAC,EAAC,GAAC,EAACC,CAAC;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACP,eACLZ,OAAA;UAAAO,QAAA,EAAI;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACxBZ,OAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACP,iBACJ;EAEP,CAAC,MACG;IACH,oBACEZ,OAAA,CAAAE,SAAA;MAAAK,QAAA,eACCP,OAAA;QAAKQ,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvBP,OAAA;UAAAO,QAAA,GACGH,CAAC,EAAC,GAAC,EAACC,CAAC,EAAC,GAAC,EAACC,CAAC;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACP,eACLZ,OAAA;UAAAO,QAAA,EAAI;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC5BZ,OAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACP,iBACJ;EAEN;AAEH,CAAC;AAAAC,EAAA,GAhCKV,KAAK;AAkCX,MAAMW,GAAG,GAACA,CAAA,KAAI;EACZ,oBACFd,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAIQ,SAAS,EAAC,eAAe;MAAAD,QAAA,GAAC,2BAAe,eAAAP,OAAA;QAAMe,KAAK,EAAE;UAACC,UAAU,EAAG;QAAM,CAAE;QAAAT,QAAA,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,iBAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAClHZ,OAAA,CAACG,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBACR;AAED,CAAC;AAAAK,GAAA,GAPGH,GAAG;AAQP,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}