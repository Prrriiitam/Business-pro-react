{"ast":null,"code":"var _jsxFileName = \"D:\\\\lerreact\\\\ractapp\\\\src\\\\CreateNode.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateNode = props => {\n  _s();\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const InputEvent = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNote(preData => {\n      return {\n        ...preData,\n        [name]: value\n      };\n    });\n  };\n  const addEvent = () => {\n    props.passNote(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_notes\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: note.title,\n          onChange: InputEvent,\n          placeholder: \"Title\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"\",\n          columns: \"\",\n          name: \"content\",\n          value: note.content,\n          onChange: InputEvent,\n          placeholder: \"Write a note...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addEvent,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            className: \"plus_sign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n_s(CreateNode, \"zzVZ6oh/+ZRsDcDMhZUk+n/Wpj8=\");\n_c = CreateNode;\nexport default CreateNode;\nvar _c;\n$RefreshReg$(_c, \"CreateNode\");","map":{"version":3,"names":["React","useState","Button","AddIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateNode","props","_s","note","setNote","title","content","InputEvent","event","name","value","target","preData","addEvent","passNote","children","className","type","onChange","placeholder","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","rows","columns","onClick","_c","$RefreshReg$"],"sources":["D:/lerreact/ractapp/src/CreateNode.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nconst CreateNode=(props)=>{\r\n    const[note,setNote]=useState({\r\n        title:\"\",\r\n        content:\"\"\r\n    });\r\n\r\n    const InputEvent=(event)=>{\r\n             const{name,value}=event.target;\r\n             setNote((preData)=>{\r\n                return{\r\n                    ...preData,\r\n                    [name]:value,\r\n                }\r\n             })\r\n    }\r\n\r\n    const addEvent=()=>{\r\n     props.passNote(note);\r\n     setNote({\r\n        title:\"\",\r\n        content:\"\"\r\n    });\r\n    }\r\n    return(\r\n        <>\r\n       <div className=\"main_notes\">\r\n         <form>\r\n            <input type=\"text\" \r\n                name=\"title\" \r\n                value={note.title}\r\n                 onChange={InputEvent} \r\n                 placeholder=\"Title\"\r\n                autoComplete=\"off\"\r\n            />\r\n            <textarea rows='' columns=''\r\n            name=\"content\"\r\n            value={note.content} \r\n            onChange={InputEvent} \r\n            placeholder=\"Write a note...\"></textarea>\r\n            <Button onClick={addEvent}>\r\n             <AddIcon className=\"plus_sign\" />\r\n            </Button>\r\n         </form>\r\n       </div> \r\n       \r\n        </>\r\n    );\r\n}\r\nexport default CreateNode;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC9C,MAAMC,UAAU,GAAEC,KAAK,IAAG;EAAAC,EAAA;EACtB,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAACX,QAAQ,CAAC;IACzBY,KAAK,EAAC,EAAE;IACRC,OAAO,EAAC;EACZ,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAEC,KAAK,IAAG;IACjB,MAAK;MAACC,IAAI;MAACC;IAAK,CAAC,GAACF,KAAK,CAACG,MAAM;IAC9BP,OAAO,CAAEQ,OAAO,IAAG;MAChB,OAAM;QACF,GAAGA,OAAO;QACV,CAACH,IAAI,GAAEC;MACX,CAAC;IACJ,CAAC,CAAC;EACX,CAAC;EAED,MAAMG,QAAQ,GAACA,CAAA,KAAI;IAClBZ,KAAK,CAACa,QAAQ,CAACX,IAAI,CAAC;IACpBC,OAAO,CAAC;MACLC,KAAK,EAAC,EAAE;MACRC,OAAO,EAAC;IACZ,CAAC,CAAC;EACF,CAAC;EACD,oBACIT,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACDlB,OAAA;MAAKmB,SAAS,EAAC,YAAY;MAAAD,QAAA,eACzBlB,OAAA;QAAAkB,QAAA,gBACGlB,OAAA;UAAOoB,IAAI,EAAC,MAAM;UACdR,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEP,IAAI,CAACE,KAAM;UACjBa,QAAQ,EAAEX,UAAW;UACrBY,WAAW,EAAC,OAAO;UACpBC,YAAY,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACpB,eACF3B,OAAA;UAAU4B,IAAI,EAAC,EAAE;UAACC,OAAO,EAAC,EAAE;UAC5BjB,IAAI,EAAC,SAAS;UACdC,KAAK,EAAEP,IAAI,CAACG,OAAQ;UACpBY,QAAQ,EAAEX,UAAW;UACrBY,WAAW,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAY,eACzC3B,OAAA,CAACH,MAAM;UAACiC,OAAO,EAAEd,QAAS;UAAAE,QAAA,eACzBlB,OAAA,CAACF,OAAO;YAACqB,SAAS,EAAC;UAAW;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACzB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACH,iBAEF;AAEX,CAAC;AAAAtB,EAAA,CA/CKF,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AAgDhB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}